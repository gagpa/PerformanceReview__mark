from telebot.types import InlineKeyboardMarkup

from app.services.dictinary.rating import RatingService
from app.tbot.extensions.template import Template
from app.tbot.storages import BUTTONS_TEMPLATES


class ProjectForm(Template):
    """ –®–∞–±–ª–æ–Ω —Ñ–æ—Ä–º—ã –ø—Ä–æ–µ–∫—Ç–æ–≤ """

    def create_markup(self) -> InlineKeyboardMarkup:
        """ –°–æ–∑–¥–∞—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É """
        if self.args.get('have_markup'):
            review_type = self.args.get('review_type')
            review = self.args.get('review')
            project = self.args.get('project')
            coworker_comment_rating = self.args.get('rating')

            if review_type == 'write':
                self.extend_keyboard(False, BUTTONS_TEMPLATES['review_form_project_edit_name'],
                                     BUTTONS_TEMPLATES['review_form_project_edit_description'],
                                     BUTTONS_TEMPLATES['review_form_project_edit_contacts'])
                self.extend_keyboard(True, BUTTONS_TEMPLATES['review_form_back_projects_list'])
                return self.build(project=project.id)

            elif review_type == 'coworker':
                unique_args = [{'rate': rating.id} for rating in RatingService().all]
                rate = BUTTONS_TEMPLATES['coworker_rate']
                comment = BUTTONS_TEMPLATES['coworker_comment']
                back = BUTTONS_TEMPLATES['coworker_back_projects'].add(review=review.id)
                self.extend_keyboard(False, comment)
                self.extend_keyboard(True, back)
                return self.build_list(rate, unique_args=unique_args, proj_rate=coworker_comment_rating.id,
                                       review=review.id)

    def create_message(self) -> str:
        """ –í–µ—Ä–Ω—É—Ç—å –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ """
        review_type = self.args.get('review_type')
        project = self.args.get('project')
        coworker_comment_rating = self.args.get('rating')
        view = self.args.get('view')
        if review_type == 'coworker':
            description = ''
            for i, rating in enumerate(RatingService().all):
                description += f'\n{"üåü" * rating.value} - {rating.name}'
            text = f' -  –¶–µ–ª–∏ –∏ –æ–±—è–∑–∞–Ω–Ω—Å–æ—Ç–∏: {project.description}'
            if coworker_comment_rating.rating:
                text += f'\n -  –¢–µ–∫—É—â–∞—è –æ—Ü–µ–Ω–∫–∞: {"üåü" * coworker_comment_rating.rating.value}'
            if coworker_comment_rating.text:
                text += f'\n -  –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –ø—Ä–æ–µ–∫—Ç—É: {coworker_comment_rating.text}'
            self.build_message(title=f'–ü—Ä–æ–µ–∫—Ç: {project.name}', description=description, text=text)
            if coworker_comment_rating.hr_comment:
                self.build_message(description=f'‚ùó –ò—Å–ø—Ä–∞–≤–∏—Ç—å: {coworker_comment_rating.hr_comment}')
            if view == 'comment':
                self.build_message(description='‚ùï  –ù–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –ø—Ä–æ–µ–∫—Ç—É')
            else:
                self.build_message(description='‚ùï  –ü–æ—Å—Ç–∞–≤—å—Ç–µ –æ—Ü–µ–Ω–∫—É –ø—Ä–æ–µ–∫—Ç—É –∏ –Ω–µ –∑–∞–±—É–¥—å—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π')
            return self.MESSAGE

        elif review_type == 'hr':
            self.build_message(title=f'–ü—Ä–æ–µ–∫—Ç: {project.name}',
                               text=f' -  –¶–µ–ª–∏ –∏ –æ–±—è–∑–∞–Ω–Ω—Å–æ—Ç–∏: {project.description}\n'
                                    f' -  –¢–µ–∫—É—â–∞—è –æ—Ü–µ–Ω–∫–∞: {"üåü" * coworker_comment_rating.rating.value}\n'
                                    f' -  –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –ø—Ä–æ–µ–∫—Ç—É: {coworker_comment_rating.text}')
            if coworker_comment_rating.hr_comment:
                self.build_message(description='‚ùï  –í–≤–µ–¥–∏—Ç–µ, —á—Ç–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å –æ—Ü–µ–Ω–∏–≤–∞—é—â–µ–º—É –≤ —Å–≤–æ–µ–π –æ—Ü–µ–Ω–∫–µ –∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ')
            return self.MESSAGE

        elif review_type == 'write':
            if view == 'edit':
                coworkers = ' '.join(
                    [f"{review.coworker.fullname} (@{review.coworker.username})" for review in project.reviews])
                self.build_message(title=f'–ü—Ä–æ–µ–∫—Ç - {project.name}',
                                   description='\n‚ùï  –í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –≤ —Å–≤–æ—ë–º –ø—Ä–æ–µ–∫—Ç–µ',
                                   text=f'–¶–µ–ª–∏ –∏ –æ–±—è–∑–∞–Ω–Ω—Å–æ—Ç–∏: {project.description}\n'
                                        f'–ö–æ–ª–ª–µ–≥–∏: {coworkers}')

            elif view == 'edit_name':
                coworkers = ' '.join(
                    [f"{review.coworker.fullname} (@{review.coworker.username})" for review in project.reviews])
                self.build_message(title=f'–ü—Ä–æ–µ–∫—Ç - {project.name}',
                                   description='\n‚ùï  –ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞',
                                   text=f'–¶–µ–ª–∏ –∏ –æ–±—è–∑–∞–Ω–Ω—Å–æ—Ç–∏: {project.description}\n'
                                        f'–ö–æ–ª–ª–µ–≥–∏: {coworkers}')

            elif view == 'edit_description':
                coworkers = ' '.join(
                    [f"{review.coworker.fullname} (@{review.coworker.username})" for review in project.reviews])
                self.build_message(title=f'–ü—Ä–æ–µ–∫—Ç - {project.name}',
                                   description='\n‚ùï  –û–ø–∏—à–∏—Ç–µ —Ü–µ–ª—å –ø—Ä–æ–µ–∫—Ç–∞ –∏ —Å–≤–æ–∏ –æ–±—è–∑–∞–Ω–Ω–æ—Å—Ç–∏',
                                   text=f'–¶–µ–ª–∏ –∏ –æ–±—è–∑–∞–Ω–Ω—Å–æ—Ç–∏: {project.description}\n'
                                        f'–ö–æ–ª–ª–µ–≥–∏: {coworkers}')

            elif view == 'edit_coworkers':
                coworkers = ' '.join(
                    [f"{review.coworker.fullname} (@{review.coworker.username})" for review in project.reviews])
                self.build_message(title=f'–ü—Ä–æ–µ–∫—Ç - {project.name}',
                                   description='\n‚ùï  –í–≤–µ–¥–∏—Ç–µ username –∫–æ–ª–ª–µ–≥–∏, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç –æ—Ü–µ–Ω–∏—Ç—å –≤–∞—à –≤–∫–ª–∞–¥ –≤ –ø—Ä–æ–µ–∫—Ç',
                                   text=f'–¶–µ–ª–∏ –∏ –æ–±—è–∑–∞–Ω–Ω—Å–æ—Ç–∏: {project.description}\n'
                                        f'–ö–æ–ª–ª–µ–≥–∏: {coworkers}')

            elif not project.name:
                self.build_message(title='–ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞', description='‚ùï  –ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞')

            elif not project.description:
                self.build_message(title='–ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞',
                                   description='\n‚ùï  –û–ø–∏—à–∏—Ç–µ —Ü–µ–ª—å –ø—Ä–æ–µ–∫—Ç–∞ –∏ —Å–≤–æ–∏ –æ–±—è–∑–∞–Ω–Ω–æ—Å—Ç–∏',
                                   text=f'–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞: {project.name}')

            elif not project.reviews:
                self.build_message(title='–ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞',
                                   description='\n‚ùï  –í–≤–µ–¥–∏—Ç–µ username –∫–æ–ª–ª–µ–≥–∏, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç –æ—Ü–µ–Ω–∏—Ç—å –≤–∞—à –≤–∫–ª–∞–¥ –≤ –ø—Ä–æ–µ–∫—Ç',
                                   text=f'–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞: {project.name}\n'
                                        f'–¶–µ–ª–∏ –∏ –æ–±—è–∑–∞–Ω–Ω—Å–æ—Ç–∏: {project.description}')
            else:
                coworkers = ' '.join(
                    [f"{review.coworker.fullname} (@{review.coworker.username})" for review in project.reviews])
                self.build_message(title=f'–ü—Ä–æ–µ–∫—Ç - {project.name}', text=f'–¶–µ–ª–∏ –∏ –æ–±—è–∑–∞–Ω–Ω—Å–æ—Ç–∏: {project.description}\n'
                                                                          f'–ö–æ–ª–ª–µ–≥–∏: {coworkers}')
            return self.MESSAGE


__all__ = ['ProjectForm']
