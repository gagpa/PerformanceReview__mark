from telebot.types import InlineKeyboardMarkup

from app.tbot.extensions.template import Template
from app.tbot.storages.buttons import BUTTONS_TEMPLATES
from app.tbot.storages.permissions import PERMISSIONS


class Notification(Template):
    """ –û–ø–æ–≤–µ—â–µ–Ω–∏–µ """

    def create_markup(self) -> InlineKeyboardMarkup:
        view = self.args.get('view')
        form = self.args.get('form')
        review = self.args.get('review')
        role = self.args.get('role')

        if view == 'to_boss':
            to_form = BUTTONS_TEMPLATES['boss_review_to_form'].add(review=form.boss_review.id)
            to_list = BUTTONS_TEMPLATES['boss_review_to_list']
            self.extend_keyboard(False, to_form)
            self.extend_keyboard(True, to_list)
            return self.build()

        elif view == 'to_coworkers':
            to_form = BUTTONS_TEMPLATES['coworkers_review_to_form'].add(review=review.id)
            to_list = BUTTONS_TEMPLATES['coworkers_review_to_list']
            self.extend_keyboard(False, to_form)
            self.extend_keyboard(True, to_list)
            return self.build()

        elif view == 'to_hr':
            to_form = BUTTONS_TEMPLATES['hr_review_to_form'].add(review=review.id)
            to_list = BUTTONS_TEMPLATES['hr_review_to_list']
            self.extend_keyboard(False, to_form)
            self.extend_keyboard(True, to_list)
            return self.build()

        elif view == 'to_employee':
            to_form = BUTTONS_TEMPLATES['review_to_form'].add(review=review.id)
            self.extend_keyboard(False, to_form)
            return self.build()

        elif view == 'from_hr_to_coworker':
            to_form = BUTTONS_TEMPLATES['coworkers_review_to_form'].add(review=review.id)
            to_list = BUTTONS_TEMPLATES['coworkers_review_to_list']
            self.extend_keyboard(False, to_form)
            self.extend_keyboard(True, to_list)
            return self.build()

        elif view == 'change_role':
            return self.markup_builder.build_reply_keyboard(PERMISSIONS[role])

    def create_message(self) -> str:
        view = self.args.get('view')
        form = self.args.get('form')
        review = self.args.get('review')

        if view == 'to_boss':
            description = f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {form.user.fullname} (@{form.user.username}) - –ó–∞–ø–æ–ª–Ω–∏–ª –∞–Ω–∫–µ—Ç—É'
            self.build_message(title='üîî –û–ø–æ–≤–µ—â–µ–Ω–∏–µ',
                               description=description)
            return self.MESSAGE

        elif view == 'to_coworkers':
            description = f'–í–∞—à –∫–æ–ª–ª–µ–≥–∞ {form.user.fullname} (@{form.user.username}) - –ü–æ–ø—Ä–æ—Å–∏–ª –≤–∞—Å –æ—Ü–µ–Ω–∏—Ç—å –µ–≥–æ —Ä–∞–±–æ—Ç—É'
            self.build_message(title='üîî –û–ø–æ–≤–µ—â–µ–Ω–∏–µ',
                               description=description)
            return self.MESSAGE

        elif view == 'to_hr':
            description = f'–°–æ—Ç—Ä—É–¥–Ω–∏–∫ {review.coworker.fullname} (@{review.coworker.username}) - –û—Ü–µ–Ω–∏–ª –∞–Ω–∫–µ—Ç—É ' \
                          f'{review.advice.form.user.fullname} (@{review.advice.form.user.username})'
            self.build_message(title='üîî –û–ø–æ–≤–µ—â–µ–Ω–∏–µ', description=description)
            return self.MESSAGE

        elif view == 'to_employee':
            description = f'–í–∞—à —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å {review.boss.fullname} (@{review.boss.username}) ' \
                          f'–≤–µ—Ä–Ω—É–ª –≤–∞–º –∞–Ω–∫–µ—Ç—É –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—à–∏–±–æ–∫'
            self.build_message(title='üîî –û–ø–æ–≤–µ—â–µ–Ω–∏–µ', description=description)
            return self.MESSAGE

        elif view == 'from_hr_to_coworker':
            description = f'HR –ø—Ä–æ—Å–∏—Ç –≤–∞—Å –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –≤–∞—à–∏ –æ—Ü–µ–Ω–∫–∏'
            self.build_message(title='üîî –û–ø–æ–≤–µ—â–µ–Ω–∏–µ', description=description)
            return self.MESSAGE

        elif view == 'accept_to_hr':
            description = f'–§–æ—Ä–º–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {review.advice.form.user.fullname} (@{review.advice.form.user.username})' \
                          f'–ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–ø–æ–ª–Ω–µ–Ω–∞'
            self.build_message(title='üîî –û–ø–æ–≤–µ—â–µ–Ω–∏–µ', description=description)
            return self.MESSAGE

        elif view == 'change_role':
            self.build_message(title='üîî –û–ø–æ–≤–µ—â–µ–Ω–∏–µ', description='–í–∞–º –ø–æ–º–µ–Ω—è–ª–∏ —Ä–æ–ª—å')
            return self.MESSAGE
